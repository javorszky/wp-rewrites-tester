# all of the files in this directory get mounted into the
# http block of the main nginx conf file.
#
# This file is the main (generic) startup file on the WordPress
# handbook, adjusted so it's valid within the http block, and
# redundant directives removed from it.
#
# @see the WP handbook: https://developer.wordpress.org/advanced-administration/server/web-server/nginx/#main-generic-startup-file
#
# php max upload limit cannot be larger than this
client_max_body_size 13m;
index              index.php index.html index.htm;

# Upstream to abstract backend connection(s) for PHP.
upstream php {
    #this should match value of "listen" directive in php-fpm pool
    server wp_fpm:9000;
    # server 127.0.0.1:9000;
}

# merging persite conf from WordPress handbook
server {
    server_name  _;
    return 302 $scheme://localhost$request_uri;
}

server {
    server_name localhost;
    root /var/www/html;

    # Include restrictions file.

    # Global restrictions configuration file.
    # Designed to be included in any server {} block.
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
    # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
    location ~ /\. {
        deny all;
    }

    # Deny access to any files with a .php extension in the uploads directory
    # Works in sub-directory installs and also in multisite network
    # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
    location ~* /(?:uploads|files)/.*\.php$ {
        deny all;
    }

    # Additional rules go here.

    # Including the wp multisite subfolder rules here
    if (!-e $request_filename) {
        rewrite /wp-admin$ $scheme://$host$request_uri/ permanent;
        rewrite ^(/[^/]+)?(/wp-.*) $2 last;
        rewrite ^(/[^/]+)?(/.*\.php) $2 last;
    }

    location / {
        try_files $uri $uri/ /index.php?$args ;
    }

    location ~ \.php$ {
        try_files $uri =404;
        include fastcgi_params;
        fastcgi_pass php;
    }
}
